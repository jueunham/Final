<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="contentType" value="text/html; charset=UTF-8"/>
	
		<beans:property name="order" value="2"/> <!-- 우선순위  -->
	</beans:bean>
	
	<beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>
		<beans:property name="order" value="1"/> <!--s 우선순위 -->
	</beans:bean>
	

	<!-- UI 레이아웃 구성 설정파일 -->
	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/tiles/template.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<!-- 자바 스프링 빈 기반의 ViewResolver -->
	<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="0"/>  <!-- 우선순위  -->
	</beans:bean>



	
	<!-- JSON응답을 위한 jsonView 스프링 빈 등록 -->
	<beans:bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
		<beans:property name="contentType" value="application/json;charset=utf-8"/>
	</beans:bean>

	<!-- MultipartResolver -->
	<!-- 파일 업로드 처리 클래스 -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxInMemorySize" value="1048576"/>  <!-- 1MB  -->
		<beans:property name="maxUploadSize" value="10485760"/>	<!--  총 파일 업로드 크기는 10MB -->
	</beans:bean>
	
	<!-- 컴포넌트를 스캔(검색후 등록)할 패키지를 지정한다.  -->
	<!-- 여러 패키지를 등록할 때에는 , 로 구분한다.  -->
	<context:component-scan base-package="com.khob.www, web" />
	

	
</beans:beans>
